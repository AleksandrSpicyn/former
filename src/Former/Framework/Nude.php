<?php
namespace Former\Framework;

class Nude extends Framework implements FrameworkInterface
{
  /**
   * Create a new Nude instance
   *
   * @param \Illuminate\Container $app
   */
  public function __construct(\Illuminate\Container $app)
  {
    $this->app = $app;
  }

  ////////////////////////////////////////////////////////////////////
  /////////////////////////// FILTER ARRAYS //////////////////////////
  ////////////////////////////////////////////////////////////////////

  public function filterButtonClasses($classes)
  {
    return $classes;
  }

  public function filterFieldClasses($classes)
  {
    return $classes;
  }

  ////////////////////////////////////////////////////////////////////
  ///////////////////////////// ADD CLASSES //////////////////////////
  ////////////////////////////////////////////////////////////////////

  public function addGroupClasses($attributes)
  {
    return $attributes;
  }

  public function addLabelClasses($attributes)
  {
    return $attributes;
  }

  ////////////////////////////////////////////////////////////////////
  //////////////////////////// RENDER BLOCKS /////////////////////////
  ////////////////////////////////////////////////////////////////////

  public function createHelp($text, $attributes)
  {
    return '<small'.$this->app['former.laravel.html']->attributes($attributes).'>'.$text.'</small>';
  }

  public function createIcon($icon, $attributes)
  {
    $attributes = $this->addClass($attributes, $icon);

    return '<i'.$this->attributes($attributes).'></i>';
  }

  ////////////////////////////////////////////////////////////////////
  //////////////////////////// WRAP BLOCKS ///////////////////////////
  ////////////////////////////////////////////////////////////////////

  public function wrapField($field)
  {
    return $field;
  }
}
